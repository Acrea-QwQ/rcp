---
title: 'ETC5513: Collaborative and Reproducible Practices'
subtitle: "Assignment 3"
author: "Michael Lydeamore"
date: today
format:
    html:
        embed-resources: true
---


```{r setup}
#| include: false
#| eval: true
source("setup.R")
```

```{r}
#| echo: false

total_marks <- 0

add_marks <- function(amount) {
    total_marks <<- total_marks + amount

    amount
}

```

```{r, echo = FALSE, eval = file.exists("tutorial.css")}
htmltools::includeCSS("tutorial.css")
```


## `r emo::ji("target")` Objectives

* Working on a reproducible  Rstudio project
* Produce a pdf report using the template discuss in Week 7 or Week 8.
* Practice markdown syntax
* Practice R coding
* Use R chunk options to customize your report template
* Create  tables, add table captions and  refer to them in the report text as described in Week 4
* Create simple figures to visualize the data, add figure captions and  refer to the figures in the report text as you learned in Week 4
* Demonstrate that you are able to work in groups to clone a GitHub repository locally and synchronize the changes between your local and remote repositories while using individual branches.
* Show that you can create and merge branches as well as resolve conflicts.
* Show that you can create meaningful Git commits so that the changes and the history of the project can be recorded and tracked.

::: {.callout-important}
This is an **individual**  assignment.
:::

## Part A - Video Presentation

Create a video that is a maximum of 10 minutes using Zoom which demonstrates your knowledge on `git`, GitHub, and the command line interface.

Join the GitHub classroom for Part A [here](https://classroom.github.com/a/glvQb3Ky). Note your repositories will start empty so you are free to add whatever you feel is needed.

::: {.callout-tip}
You will need to plan and rehearse the steps in this video to ensure all the steps are smooth, well explained and that all the different screens are captured in the recording.
:::

The video should demonstrate your ability to use these tools efficiently for version control and collaboration. Make sure you explain what you are doing in each step and why.

Please make sure you include _all_ of the steps described below. Your camera must be on and recorded together with the workings.

__You only need to use commands we have learned in class.__

1. Create a new RStudio Project. In this folder, create a simple qmd file called `example.qmd` that can be knitted into a HTML file. Show this by knitting the file.

2. From the command line interface, initialise this folder as a git repository and push it to the GitHub classroom repository.

3. Create a new branch called `testbranch`. Modify the file `example.qmd` and add the changes to both the local and remote repositories. Add another commit in this branch where you create a folder called data, and add the data from Assignment 1 to that folder. 

4. *Amend the previous commit to include the data folder*. Push this amended commit to the remote.

5. Switch back to the main branch and modify `example.qmd` in a different way such that it will conflict with `testbranch`. Commit and push these changes.

6. Merge the changes in `testbranch` onto `main`. Show the conflict and fixing the merge conflict. Push the changes to GitHub, showing the status and changes in GitHub. 

7. Tag this commit v1.0 on `main` using an annotated tag.

8. Delete branch `testbranch` locally and on the remote.

9. Show the commit log in condensed form in the terminal. 

10. On main, create a new section in `example.qmd` that includes an easy to make plot. Commit the changes, and demonstrate using the command line interface how to undo the commit _without_ losing your local changes.

::: {.callout-tip}
To reset your GitHub repository on GitHub classroom, use the following steps from inside the working directory:

```
rm -rf .git
git init
git commit -m "Initial commit" --allow-empty
git remote add origin <git-url>
git push -u --force origin main
```
:::

[**Note that this will completely overwrite your remote git repository, and will delete whatever was previously in it**]{.red}

# Part B - Slides

Create a maximum 10 slide summary of your group report from Assignment 2. The slides must be _fully reproducible_. Join the GitHub classroom for Part B [here](https://classroom.github.com/a/ibMWZMtG).

::: {.callout-tip}
Don't include the images from Assignment 2, you will need to re-compute the plots and tables as part of the slides in order to make the slides reproducible.
:::

The slide format should be as follows:

* Title slide. Include your name and the title of your report at a minimum.
* Problem introduction.
* Dataset description
* Methods
* Results
* Conclusions and/or recommendations

It is up to you to decide how many slides to allocate to each section.

You may choose whether to include the R code output in your presentation or not. However, please keep in mind that we are looking for a professional and cohesive presentation, which may mean the code does not get shown.

Make sure to commit frequently, not just at the end of the work!


## Marking Rubric

### Part A
* Each of the instructions will be assessed as to whether they are successfully completed or not (1 mark each, total `r add_marks(10)` points)
* Clear commit messages used in the video (`r add_marks(1)` point)
* Presentation has good flow and is clear (`r add_marks(2)` points)
* Issues with language and grammar: Maximum deduction of 3 points

### Part B
* Messages in commits are clear and informative (`r add_marks(1)` point)
* Presentation is reproducible (`r add_marks(2)` points)
* Styling is sensible and does not detract from the presentation (`r add_marks(2)` points)
* Presentation tells a clear story (`r add_marks(2)` points)


Maximum grade: `r total_marks` points.

## The usage of AI

You may use Generative AI (such as ChatGPT) to _correct your English_ or to help with your R code (for example to find bugs or ask for enhancements to _your existing code_). However, if you use ChatGPT you must declare it by adding a section in your Quarto report called `Appendix`, and display screenshots of your ChatGPT queries and interactions related to this assignment.

You **cannot** use ChatGPT to generate content for this assignment from scratch, including code.

Monash University supports the responsible and ethical use of generative AI. For more info please refer to [Monash Policy and practise guidance around acceptable and responsible use of AI technologies](https://www.monash.edu/learning-teaching/teachhq/Teaching-practices/artificial-intelligence/policy-and-practice-guidance-around-acceptable-and-responsible-use-of-ai-technologies).

::: {.callout-tip}
Remember you can be better than ChatGPT. If you just use ChatGPT to create content for you, where is your value and why are your skills special?
:::

## Assignment Submission

Submit the recorded video via Moodle.

Marking for Part B will take place directly on GitHub classroom.

## Plagiarism

Monash University is committed to honesty and academic integrity. There are serious consequences for plagiarism and collusion. If plagiarism and/or collusion is detected further actions will be taken according to Monash University policy and procedures. More info here:

https://www.monash.edu/students/admin/policies/academic-integrity

You cannot re-use assignments that have been submitted or used in  other units.