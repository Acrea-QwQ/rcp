---
title: 'ETC5513: Collaborative and Reproducible Practices'
subtitle: "Tutorial 5"
author: "Michael Lydeamore"
date: today
format:
    unilur-html:
        output-file: index.html
        embed-resources: true
    unilur-html+solution:
        output-file: solution.html
        embed-resources: true
---
```{r, echo = FALSE, eval = file.exists("tutorial.css")}
htmltools::includeCSS("tutorial.css")
```

# 🤝 Exercise 1: Forking and Pull Requests in Pairs

In this exercise, you’ll work with a partner to practice real-world collaboration on GitHub.

You’ll learn how to:

- Fork a GitHub repo created by your teammate
- Make a change
- Submit a pull request (PR)
- Review and merge someone else's PR

---

## 🧑‍🤝‍🧑 Step 1: Pair Up

Assign roles in your pair:

- **Student A** = *Repository Owner*  
- **Student B** = *Contributor (forks and submits a pull request)*

You’ll switch roles after completing the exercise.

---

## 🛠️ Step 2: Student A – Create a Starter Repository

1. Go to [https://github.com](https://github.com) and log in.  
2. Click **+ → New Repository**  
3. Name the repository something simple, like `collab-demo`  
4. ✅ Check **Add a README file**  
5. Click **Create Repository**  
6. Share the **URL** of the repository with Student B  

7. Now **clone the repository to your own computer**:

   - Click the green **Code** button → choose **SSH** and copy the URL  
   - In your terminal:

   ```bash
   git clone git@github.com:your-username/collab-demo.git
   cd collab-demo
   ```

8. Create a new RStudio Project in an _existing directory_:
    *  Open RStudio  
    * Go to **File → New Project → Existing Directory**  
    * Browse to the folder you just cloned (e.g., `collab-demo`)  
    * Click **Create Project**

9. Add, commit and push the `.Rproj` file that gets created:
   
   ```bash
   git add .Rproj
   git commit -m "Add .Rproj file"
   git push origin main
   ```

✅ Done! Your repository is ready for your partner to fork and contribute.

---

## 🍴 Step 3: Student B – Fork and Contribute

1. Open the repo link your partner (Student A) shared.
2. Click the **"Fork"** button (top-right corner).
3. On your forked copy, click **Code → SSH** and copy the URL.

4. Open your terminal and clone your fork:

```bash
git clone git@github.com:your-username/collab-demo.git
cd collab-demo
```

5. Open this folder in RStudio and edit the README file to include your name

6. Save the file, then stage, commit, and push:

```bash
git add README.md
git commit -m "Add line to README"
git push origin main
```

7. Go back to your forked repository on GitHub.  
   Click **“Compare & pull request”**, then **Create pull request**.

✅ You’ve submitted your contribution!

---

## ✅ Step 4: Student A – Review and Merge the Pull Request

1. Go to your original repository on GitHub.
2. You should see a new pull request from your partner.
3. Click it → Review the changes.
4. Click **Merge pull request**, then **Confirm merge**.
5. (Optional) Delete the branch after merging.

🎉 Your teammate’s changes are now part of the main repository!

---

## 🔁 Step 5: Switch Roles

Switch roles so both students get experience creating, forking, and merging.

---

# 🍴 Exercise 2: Fork a Public Repository and Make a Pull Request

In this exercise, you’ll practice contributing to an existing project by:

- Forking a public repository
- Making a simple contribution
- Submitting a pull request (PR)

---

## 📦 Step 1: Fork the Repository

1. Go to this GitHub repository:  
   👉 [`https://github.com/numbats/rcp`](https://github.com/numbats/rcp)

2. In the top-right corner, click the **“Fork”** button.

3. GitHub will create a copy of the repo in your account.

---

## 💻 Step 2: Clone Your Fork

1. On your forked repository page, click the green **Code** button.  
2. Select **SSH**, then copy the URL.

3. Open your terminal and run:

```bash
git clone git@github.com:your-username/rcp.git
cd rcp
```

---

## 📝 Step 3: Add Your File

Inside the project, you’ll see a folder called `student-record`.

1. Create a new file in that folder using your name. For example:

```bash
touch student-record/jamie-lee.md
```

2. Open the file and add a simple message:

```markdown
Hi, I’m Jamie! Here’s my contribution to the rcp project.
```

3. Save the file.

---

## 📬 Step 4: Commit and Push

1. Stage and commit your file:

```bash
git add student-record/jamie-lee.md
git commit -m "Add jamie-lee.md to student-record"
```

2. Push your changes to your fork:

```bash
git push origin main
```

---

## ✅ Step 5: Create a Pull Request

1. Go back to your fork on GitHub.  
2. You should see a banner to **“Compare & pull request”** — click it.  
3. Confirm the changes, then click **“Create pull request”**

🎉 You’ve just submitted a real contribution to a public GitHub repository!

---

## 🧠 Why This Matters

This is how open-source collaboration works in the real world:
- You fork a project
- Make meaningful changes
- Propose those changes via a pull request
- Maintainers review and (hopefully!) merge your work

You're now part of the open-source ecosystem 💪

---
